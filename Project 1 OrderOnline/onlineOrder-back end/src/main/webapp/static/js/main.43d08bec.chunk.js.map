{"version":3,"sources":["utils.js","components/LoginForm.js","components/FoodList.js","components/MyCart.js","components/SignupForm.js","App.js","reportWebVitals.js","index.js"],"names":["login","credential","loginUrl","username","password","fetch","method","headers","credentials","then","response","status","Error","signup","data","body","JSON","stringify","LoginForm","state","loading","onFinish","setState","message","success","props","onSuccess","catch","err","error","finally","render","name","style","width","margin","Item","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","type","htmlType","React","Component","Option","Select","AddToCartButton","itemId","useState","setLoading","title","icon","PlusOutlined","onClick","addItemToCart","FoodList","foodData","setFoodData","curRest","setCurRest","restaurants","setRestaurants","loadingRest","setLoadingRest","useEffect","json","restId","value","onSelect","onChange","map","item","id","marginTop","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","extra","src","imageUrl","alt","height","display","price","Text","Typography","MyCart","cartVisible","setCartVisible","cartData","setCartData","checking","setChecking","onCloseDrawer","shape","onClose","visible","footer","justifyContent","strong","totalPrice","marginRight","disabled","orderItemList","length","itemLayout","Meta","menuItem","description","SignupForm","displayModal","handleCancel","signupOnClick","onCancel","destroyOnClose","initialValues","remember","preserve","Header","Layout","Content","Title","App","authed","setAuthed","className","level","color","lineHeight","marginBottom","padding","maxHeight","overflowY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43d08bec.chunk.js","sourcesContent":["export const login = (credential) => {\n    const loginUrl = `/login?username=${credential.username}&password=${credential.password}`;\n\n    return fetch(loginUrl, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n    }).then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to log in\");\n        }\n    });\n};\n\nexport const getMenus = (restId) => {\n    return fetch(`/restaurant/${restId}/menu`).then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to get menus\");\n        }\n\n        return response.json();\n    });\n};\n\nexport const getRestaurants = () => {\n    return fetch(\"/restaurants\").then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to get restaurants\");\n        }\n\n        return response.json();\n    });\n};\n\nexport const getCart = () => {\n    return fetch(\"/cart\").then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to get shopping cart data\");\n        }\n\n        return response.json();\n    });\n};\n\nexport const checkout = () => {\n    return fetch(\"/checkout\").then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to checkout\");\n        }\n    });\n};\n\nexport const addItemToCart = (itemId) => {\n    return fetch(`/order/${itemId}`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n    }).then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to add menu item to shopping cart\");\n        }\n    });\n};\n\nexport const signup = (data) => {\n    const signupUrl = \"/signup\";\n\n    return fetch(signupUrl, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n    }).then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to sign up\");\n        }\n    });\n};\n","import { Button, Form, Input, message } from \"antd\";\nimport React from \"react\";\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { login } from \"../utils\";\n\nclass LoginForm extends React.Component {\n    state = {\n        loading: false,\n    };\n\n    onFinish = (data) => {\n        this.setState({\n            loading: true,\n        });\n        login(data)\n            .then(() => {\n                message.success(`Login Successful`);\n                this.props.onSuccess();\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                this.setState({\n                    loading: false,\n                });\n            });\n    };\n\n    render = () => {\n        return (\n            <Form\n                name=\"normal_login\"\n                onFinish={this.onFinish}\n                style={{\n                    width: 300,\n                    margin: \"auto\",\n                }}\n            >\n                <Form.Item\n                    name=\"username\"\n                    rules={[{ required: true, message: \"Please input your Username!\" }]}\n                >\n                    <Input prefix={<UserOutlined />} placeholder=\"Username\" />\n                </Form.Item>\n                <Form.Item\n                    name=\"password\"\n                    rules={[{ required: true, message: \"Please input your Password!\" }]}\n                >\n                    <Input.Password prefix={<LockOutlined />} placeholder=\"Password\" />\n                </Form.Item>\n\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" loading={this.state.loading}>\n                        Login\n                    </Button>\n                </Form.Item>\n            </Form>\n        );\n    };\n}\n\nexport default LoginForm;","import { Button, Card, List, message, Select, Tooltip } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { addItemToCart, getMenus, getRestaurants } from \"../utils\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nconst { Option } = Select;\n\nconst AddToCartButton = ({ itemId }) => {\n    const [loading, setLoading] = useState(false);\n\n    const AddToCart = () => {\n        setLoading(true);\n        addItemToCart(itemId)\n            .then(() => message.success(`Successfully add item`))\n            .catch((err) => message.error(err.message))\n            .finally(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <Tooltip title=\"Add to shopping cart\">\n            <Button\n                loading={loading}\n                type=\"primary\"\n                icon={<PlusOutlined />}\n                onClick={AddToCart}\n            />\n        </Tooltip>\n    );\n};\n\nconst FoodList = () => {\n    const [foodData, setFoodData] = useState([]);\n    const [curRest, setCurRest] = useState();\n    // current selected options\n    const [restaurants, setRestaurants] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [loadingRest, setLoadingRest] = useState(false);\n\n    useEffect(() => {\n        setLoadingRest(true);\n        getRestaurants()\n            .then((data) => {\n                setRestaurants(data);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                setLoadingRest(false);\n            });\n    }, []);\n\n    useEffect(() => {\n        if (curRest) {\n            setLoading(true);\n            getMenus(curRest)\n                .then((data) => {\n                    setFoodData(data);\n                })\n                .catch((err) => {\n                    message.error(err.message);\n                })\n                .finally(() => {\n                    setLoading(false);\n                });\n        }\n    }, [curRest]);\n\n    return (\n        <>\n            <Select\n                value={curRest}\n                onSelect={(value) => setCurRest(value)}\n                placeholder=\"Select a restaurant\"\n                loading={loadingRest}\n                style={{ width: 300 }}\n                onChange={() => {}}\n            >\n                {restaurants.map((item) => {\n                    return <Option key={item.id} value={item.id}>{item.name}</Option>;\n                })}\n            </Select>\n            {curRest && (\n                <List\n                    style={{ marginTop: 20 }}\n                    loading={loading}\n                    grid={{\n                        gutter: 16,\n                        xs: 1,\n                        sm: 2,\n                        md: 4,\n                        lg: 4,\n                        xl: 3,\n                        xxl: 3,\n                    }}\n                    dataSource={foodData}\n                    renderItem={(item) => (\n                        <List.Item>\n                            <Card\n                                title={item.name}\n                                extra={<AddToCartButton itemId={item.id} />}\n                            >\n                                <img\n                                    src={item.imageUrl}\n                                    alt={item.name}\n                                    style={{ height: 'auto', width: \"100%\", display: \"block\" }}\n                                />\n                                {`Price: ${item.price}`}\n                            </Card>\n                        </List.Item>\n                    )}\n                />\n            )}\n        </>\n    );\n};\n\nexport default FoodList;","import { Button, Drawer, List, message, Typography } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { checkout, getCart } from \"../utils\";\n\nconst { Text } = Typography;\n\nconst MyCart = () => {\n    const [cartVisible, setCartVisible] = useState(false);\n    const [cartData, setCartData] = useState();\n    const [loading, setLoading] = useState(false);\n    const [checking, setChecking] = useState(false);\n\n    useEffect(() => {\n        if (!cartVisible) {\n            return;\n        }\n\n        setLoading(true);\n        getCart()\n            .then((data) => {\n                setCartData(data);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, [cartVisible]);\n\n    const onCheckOut = () => {\n        setChecking(true);\n        checkout()\n            .then(() => {\n                message.success(\"Successfully checkout\");\n                setCartVisible(false);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                setChecking(false);\n            });\n    };\n\n    const onCloseDrawer = () => {\n        setCartVisible(false);\n    };\n\n    const onOpenDrawer = () => {\n        setCartVisible(true);\n    };\n\n    return (\n        <>\n            <Button type=\"primary\" shape=\"round\" onClick={onOpenDrawer}>\n                Cart\n            </Button>\n            <Drawer\n                title=\"My Shopping Cart\"\n                onClose={onCloseDrawer}\n                visible={cartVisible}\n                width={520}\n                footer={\n                    <div\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                        }}\n                    >\n                        <Text strong={true}>{`Total price: $${cartData?.totalPrice}`}</Text>\n                        <div>\n                            <Button onClick={onCloseDrawer} style={{ marginRight: 8 }}>\n                                Cancel\n                            </Button>\n                            <Button\n                                onClick={onCheckOut}\n                                type=\"primary\"\n                                loading={checking}\n                                disabled={loading || cartData?.orderItemList.length === 0}\n                            >\n                                Checkout\n                            </Button>\n                        </div>\n                    </div>\n                }\n            >\n                <List\n                    loading={loading}\n                    itemLayout=\"horizontal\"\n                    dataSource={cartData?.orderItemList}\n                    renderItem={(item) => (\n                        <List.Item>\n                            <List.Item.Meta\n                                title={item.menuItem.name}\n                                description={`$${item.price}`}\n                            />\n                        </List.Item>\n                    )}\n                />\n            </Drawer>\n        </>\n    );\n};\n\nexport default MyCart;","import { Button, Form, Input, message, Modal } from \"antd\";\nimport React from \"react\";\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { signup } from \"../utils\";\n\nclass SignupForm extends React.Component {\n    state = {\n        displayModal: false,\n    };\n\n    handleCancel = () => {\n        this.setState({\n            displayModal: false,\n        });\n    };\n\n    signupOnClick = () => {\n        this.setState({\n            displayModal: true,\n        });\n    };\n\n    onFinish = (data) => {\n        signup(data)\n            .then(() => {\n                this.setState({\n                    displayModal: false,\n                });\n                message.success(`Successfully signed up`);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            });\n    };\n\n    render = () => {\n        return (\n            <>\n                <Button shape=\"round\" type=\"primary\" onClick={this.signupOnClick}>\n                    Register\n                </Button>\n                <Modal\n                    title=\"Register\"\n                    visible={this.state.displayModal}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                    destroyOnClose={true}\n                >\n                    <Form\n                        name=\"normal_register\"\n                        initialValues={{ remember: true }}\n                        onFinish={this.onFinish}\n                        preserve={false}\n                    >\n                        <Form.Item\n                            name=\"email\"\n                            rules={[{ required: true, message: \"Please input your email!\" }]}\n                        >\n                            <Input prefix={<UserOutlined />} placeholder=\"Email\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"password\"\n                            rules={[\n                                { required: true, message: \"Please input your password!\" },\n                            ]}\n                        >\n                            <Input prefix={<LockOutlined />} placeholder=\"Password\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"firstName\"\n                            rules={[\n                                { required: true, message: \"Please input your first name!\" },\n                            ]}\n                        >\n                            <Input placeholder=\"firstname\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"lastName\"\n                            rules={[\n                                { required: true, message: \"Please input your last name!\" },\n                            ]}\n                        >\n                            <Input placeholder=\"lastname\" />\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Register\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </>\n        );\n    };\n}\n\nexport default SignupForm;","import './App.css';\nimport LoginForm from \"./components/LoginForm\";\nimport FoodList from \"./components/FoodList\";\nimport MyCart from \"./components/MyCart\";\nimport SignupForm from \"./components/SignupForm\";\nimport { Layout } from \"antd\";\nimport { Typography } from \"antd\";\nimport {useState} from 'react'\n\nconst { Header, Content } = Layout;\nconst { Title } = Typography;\n\nfunction App() {\n    const [authed, setAuthed] = useState(false);\n  return (\n      <Layout style={{ height: \"100vh\" }}>\n          <Header>\n              <div className=\"header\"\n                   style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                  <Title\n                      level={2}\n                      style={{ color: \"white\", lineHeight: \"inherit\", marginBottom: 0 }}\n                  >\n                      OrderOnline\n                  </Title>\n                  {authed && (\n                      <div>\n                          <MyCart /> : <SignupForm />\n                      </div>\n                  )}\n              </div>\n          </Header>\n          <Content\n            style={{\n              padding: \"50px\",\n              maxHeight: \"calc(100% - 64px)\",\n              overflowY: \"auto\",\n            }}>\n            {authed ? (\n                <div><FoodList /></div>\n            ) : (\n                <LoginForm onSuccess={() => setAuthed(true)} />\n            )}\n        </Content>\n      </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}